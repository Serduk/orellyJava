package edu.examplesForRMIMiniServices;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.rmi.Naming;

/**
 * Client Part
 *
 * Created by sserdiuk on 6/30/17.
 */
public class ServiceBrowser {
    JPanel mainPanel;
    JComboBox serviceList;
    ServiceServer server;

    public void buildGUI() {
        JFrame frame = new JFrame("RMI Browser");
        mainPanel = new JPanel();
        frame.getContentPane().add(BorderLayout.CENTER, mainPanel);

        /*
        * This method execute search in RMI registry
        * and get stub, and call method getServiceList
        * */
        Object[] services = getServicesList();
        /*
        * Add all services (array of Objects) in viget comboBox
        * */
        serviceList = new JComboBox(services);

        frame.getContentPane().add(BorderLayout.NORTH, serviceList);
        serviceList.addActionListener(new MyListListener());

        frame.setSize(500, 500);
        frame.setVisible(true);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    }

    Object[] getServicesList() {
        Object obj = null;
        Object[] services = null;

        /*
        * execute search in RMI register and get Stab
        * */
        try {
            obj = Naming.lookup("rmi://127.0.0.1/serviceServer");

        } catch (Exception ex) {
            ex.printStackTrace();
        }

        /*
        * set type "Stab" to type remote interface.
        * For call method getServiceList() in future
        * */
        server = (ServiceServer) obj;
        /*
        * Method getServiceList() return array vit Objects
        * We can show it in list of JComboBox
        * where user will make his choose
        * */
        try {
            services = server.getServiceList();
        } catch (Exception ex) {
            ex.printStackTrace();
        }

        return services;
    }


    /*
    * Here we add on Panel real service,
    * After that, when user choose him from list
    * (method call in Action, who generated by JComboBox)
    * We Call getService() from remote server (Stab for ServiceServer)
    * and give him String, who has in list.
    * This String what we get when call method getServiceList()
    * Server returned serializable object of service,
    * who with RMI will be deserializable automatically,
    * after what, we just call from him method getGUIPanel(),
    * and add obtained result(JPanel) on main panel of Browser (mainPanel)
    * */
    void loadService(Object serviceSelection) {
        try {
            Service svc = server.getService(serviceSelection);

            mainPanel.removeAll();
            mainPanel.add(svc.getGUIPanel());
            mainPanel.validate();
            mainPanel.repaint();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    class MyListListener implements ActionListener {
        @Override
        public void actionPerformed(ActionEvent e) {
            Object selection = serviceList.getSelectedItem();
            /*
            * if we go to this row
            * its mean: user choose element from JComboBox
            * We get this element and upload Current service (element = service)
            * 
            * */
            loadService(selection);
        }
    }

    public static void main(String[] args) {
        new ServiceBrowser().buildGUI();
    }
}
