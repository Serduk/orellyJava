[1mdiff --git a/src/edu/mainRun/Music/MiniMiniMusicApp.java b/src/edu/mainRun/Music/MiniMiniMusicApp.java[m
[1mindex 106c28a..d102db4 100644[m
[1m--- a/src/edu/mainRun/Music/MiniMiniMusicApp.java[m
[1m+++ b/src/edu/mainRun/Music/MiniMiniMusicApp.java[m
[36m@@ -1,4 +1,4 @@[m
[31m-package edu.mainRun;[m
[32m+[m[32mpackage edu.mainRun.Music;[m
 [m
 import javax.sound.midi.*;[m
 [m
[1mdiff --git a/src/edu/mainRun/Music/MiniMusicCmdLine.java b/src/edu/mainRun/Music/MiniMusicCmdLine.java[m
[1mindex 66ee56b..0e8689a 100644[m
[1m--- a/src/edu/mainRun/Music/MiniMusicCmdLine.java[m
[1m+++ b/src/edu/mainRun/Music/MiniMusicCmdLine.java[m
[36m@@ -1,7 +1,54 @@[m
[31m-package edu.mainRun;[m
[32m+[m[32mpackage edu.mainRun.Music;[m
[32m+[m
[32m+[m[32mimport javax.sound.midi.*;[m
 [m
 /**[m
[32m+[m[32m * listener from cmd line[m
  * Created by serdyuk on 5/2/17.[m
  */[m
 public class MiniMusicCmdLine {[m
[32m+[m[32m    public static void main(String[] args) {[m
[32m+[m[32m        MiniMusicCmdLine mini = new MiniMusicCmdLine();[m
[32m+[m
[32m+[m[32m        if (args.length < 2) {[m
[32m+[m[32m            System.out.println("Don't forget insert any params");[m
[32m+[m[32m        } else {[m
[32m+[m[32m            int instrument = Integer.parseInt(args[0]);[m
[32m+[m[32m            int note = Integer.parseInt(args[1]);[m
[32m+[m[32m            mini.play(instrument, note);[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private void play(int instrument, int note) {[m
[32m+[m
[32m+[m[32m        try {[m
[32m+[m[32m            Sequencer player = MidiSystem.getSequencer();[m
[32m+[m[32m            player.open();[m
[32m+[m[32m            Sequence seq = new Sequence(Sequence.PPQ, 4);[m
[32m+[m[32m            Track track = seq.createTrack();[m
[32m+[m
[32m+[m[32m            MidiEvent event = null;[m
[32m+[m
[32m+[m[32m            ShortMessage first = new ShortMessage();[m
[32m+[m[32m            first.setMessage(192, 1, instrument, 0);[m
[32m+[m[32m            MidiEvent changeInstrument = new MidiEvent(first, 1);[m
[32m+[m[32m            track.add(changeInstrument);[m
[32m+[m
[32m+[m[32m            ShortMessage a = new ShortMessage();[m
[32m+[m[32m            first.setMessage(192, 1, note, 100);[m
[32m+[m[32m            MidiEvent noteOn = new MidiEvent(a, 1);[m
[32m+[m[32m            track.add(noteOn);[m
[32m+[m
[32m+[m[32m            ShortMessage b = new ShortMessage();[m
[32m+[m[32m            first.setMessage(192, 1, note, 100);[m
[32m+[m[32m            MidiEvent noteOff = new MidiEvent(b, 1);[m
[32m+[m[32m            track.add(noteOff);[m
[32m+[m
[32m+[m[32m            player.setSequence(seq);[m
[32m+[m[32m            player.start();[m
[32m+[m[32m        } catch (MidiUnavailableException | InvalidMidiDataException e) {[m
[32m+[m[32m            e.printStackTrace();[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m    }[m
 }[m
